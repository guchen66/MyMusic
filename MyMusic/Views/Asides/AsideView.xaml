<UserControl
    x:Class="MyMusic.Views.Asides.AsideView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:be="clr-namespace:Music.Themes.Behaviors;assembly=Music.Themes"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:MyMusic.Views.Asides"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:region="clr-namespace:Music.Shared.Consts;assembly=Music.Shared"
    xmlns:sign="clr-namespace:Music.System.Services.MainSign.CreateControllerSign;assembly=Music.System"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    d:DesignHeight="450"
    d:DesignWidth="800"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <Storyboard x:Key="MenuOpen">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="GridMenu" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <EasingDoubleKeyFrame KeyTime="0" Value="60" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="200" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="MenuClose">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="GridMenu" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <EasingDoubleKeyFrame KeyTime="0" Value="200" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="60" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonOpenMenu">
            <BeginStoryboard Storyboard="{StaticResource MenuOpen}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonCloseMenu">
            <BeginStoryboard Storyboard="{StaticResource MenuClose}" />
        </EventTrigger>
    </UserControl.Triggers>

    <Grid
        x:Name="GridMenu"
        Width="60"
        HorizontalAlignment="Left"
        Background="{DynamicResource PrimaryHueMidBrush}"
        DockPanel.Dock="Left">
        <StackPanel>
            <Grid Height="150" Background="White">
                <Button
                    x:Name="ButtonCloseMenu"
                    Width="60"
                    Height="60"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="{x:Null}"
                    BorderBrush="{x:Null}"
                    Click="ButtonCloseMenu_Click"
                    Visibility="Collapsed">
                    <materialDesign:PackIcon
                        Width="25"
                        Height="25"
                        Foreground="#FF1B3861"
                        Kind="ArrowLeft" />
                </Button>
                <Button
                    x:Name="ButtonOpenMenu"
                    Width="60"
                    Height="60"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="{x:Null}"
                    BorderBrush="{x:Null}"
                    Click="ButtonOpenMenu_Click">
                    <materialDesign:PackIcon
                        Width="25"
                        Height="25"
                        Foreground="#FF1B3861"
                        Kind="Menu" />
                </Button>
            </Grid>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <!--  导航歌单  -->
                <ListView
                    Foreground="White"
                    ItemsSource="{Binding AsideMenus}"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon
                                    Width="25"
                                    Height="25"
                                    Margin="10"
                                    VerticalAlignment="Center"
                                    Kind="{Binding Icon}" />
                                <TextBlock
                                    Margin="20,10"
                                    VerticalAlignment="Center"
                                    Text="{Binding Content}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding DataContext.NavigateCommand, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListView>

                <!--  创建新歌单  -->
                <Border Grid.Row="1" BorderThickness="1,1,0,0">
                    <Border.BorderBrush>
                        <SolidColorBrush Opacity="0.2" Color="Gray" />
                    </Border.BorderBrush>
                    <Expander
                        x:Name="expander"
                        HorizontalContentAlignment="Stretch"
                        Panel.ZIndex="1"
                        Background="{x:Null}"
                        ExpandDirection="Down"
                        IsExpanded="True">
                        <Expander.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock
                                    Grid.Column="1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Panel.ZIndex="1"
                                    FontFamily="../../Assets/Fonts/#iconfont"
                                    FontSize="15"
                                    Foreground="White"
                                    Text="创建的歌单" />
                                <TextBlock
                                    Margin="10,0,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Panel.ZIndex="10"
                                    FontFamily="../../Assets/Fonts/#iconfont"
                                    FontSize="20"
                                    Foreground="White"
                                    Text="&#xe695;">
                                    <TextBlock.InputBindings>
                                        <MouseBinding Command="{Binding CreatePlayListCommand}" MouseAction="LeftClick" />
                                    </TextBlock.InputBindings>
                                </TextBlock>
                            </StackPanel>
                        </Expander.Header>
                        <Expander.Content>
                            <ItemsControl be:RefreshItemsControlBehavior.IsChanged="{Binding DataContext.IsChanged, ElementName=expander}" ItemsSource="{Binding AsedeCreateplayListDtos, Mode=TwoWay}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <!--  StringToLongConverter没有丝毫意思，我就是想误导我自己，结果我上当了  -->
                                        <Button
                                            x:Name="btn"
                                            Height="50"
                                            Command="{Binding DataContext.OpenPlayListCommand, RelativeSource={RelativeSource AncestorType=Expander}}"
                                            CommandParameter="{Binding IsExistContent, ConverterParameter=StringToLongConverter}"
                                            Content="{Binding PlayListName}"
                                            Foreground="White"
                                            Style="{StaticResource MaterialDesignFlatButton}"
                                            Tag="{Binding Id}"
                                            TextBlock.TextAlignment="Center">
                                            <!--  使用定位器重新实例化一个Button的数据上下文内容  -->
                                            <Button.ContextMenu>
                                                <ContextMenu Background="{x:Null}" Foreground="White">
                                                    <ContextMenu.Resources>
                                                        <ObjectDataProvider x:Key="playListDataProvider" ObjectType="{x:Type sign:OperatePlayLists}">
                                                            <!--  `技术有限，由于接口不能直接绑定为参数  -->
                                                            <!--<ioc:IContainerProvider/>-->
                                                        </ObjectDataProvider>
                                                    </ContextMenu.Resources>
                                                    <ContextMenu.DataContext>
                                                        <!--<sign:OperatePlayLists />-->
                                                        <Binding Source="{StaticResource playListDataProvider}" />
                                                    </ContextMenu.DataContext>
                                                    <MenuItem
                                                        Background="Gray"
                                                        Command="{Binding ReNamePlayListItemCommand}"
                                                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Content}"
                                                        Header="重命名" />
                                                    <MenuItem
                                                        Background="Gray"
                                                        Command="{Binding DeletePlayListItemCommand}"
                                                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag}"
                                                        Header="删除" />
                                                </ContextMenu>
                                            </Button.ContextMenu>
                                        </Button>

                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Expander.Content>
                    </Expander>
                </Border>
            </Grid>

        </StackPanel>
    </Grid>
</UserControl>
