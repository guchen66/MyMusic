<UserControl
    x:Class="MyMusic.Views.FooterView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="clr-namespace:MyMusic.Shell.Views.Settings.Children;assembly=MyMusic"
    xmlns:converter="clr-namespace:Music.ToolKit.Converters;assembly=Music.ToolKit"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:MyMusic.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:prism="http://prismlibrary.com/"
    d:DesignHeight="80"
    d:DesignWidth="800"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding InitingCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <converter:TimeSpanConverter x:Key="TimeSpanConverter" />
    </UserControl.Resources>
    <Grid
        Grid.Row="2"
        Margin="0,0,0,-4"
        Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseLeftButtonDown">
                <i:InvokeCommandAction Command="{Binding DragMoveCommand}" />
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <!--  Music Spectrum  -->
        <Polygon
            Grid.Row="0"
            Grid.RowSpan="2"
            Width="1024"
            Height="68"
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            Points="{Binding Points}">
            <Polygon.Fill>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#84fab0" />
                    <GradientStop Offset="1" Color="#8fd3f4" />
                </LinearGradientBrush>
            </Polygon.Fill>
        </Polygon>

        <!--  Music progress bar  -->
        <!--<control:DragSlider
            Grid.Row="0"
            Cursor="Hand"
            IsMoveToPointEnabled="True"
            Maximum="{Binding MusicMaxTime, Converter={StaticResource TimeSpanConverter}}"
            Style="{StaticResource MaterialDesignSlider}"
            Value="{Binding MusicNowTime, Converter={StaticResource TimeSpanConverter}}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="LostMouseCapture">
                    <i:InvokeCommandAction Command="{Binding MusicPositionChangedCommand}" CommandParameter="{Binding Value, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=control:DragSlider}}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="GotMouseCapture">
                    <i:InvokeCommandAction Command="{Binding MusicPositionBeginChangedCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </control:DragSlider>-->

        <Grid Grid.Row="1" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!--  Cover and Info  -->
            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <!--  Cover  -->
                <Button
                    Width="50"
                    Height="50"
                    Margin="10,0,10,0"
                    Padding="0"
                    Background="{x:Null}"
                    BorderBrush="{x:Null}"
                    Command="{Binding CoverClickCommand}">
                    <Grid Cursor="Hand">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseMove">
                                <i:InvokeCommandAction Command="{Binding MouseMovedCoverCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:InvokeCommandAction Command="{Binding MouseLeftCoverCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <Image Source="{Binding CoverSource}" Stretch="UniformToFill">
                            <Image.Clip>
                                <RectangleGeometry
                                    RadiusX="5"
                                    RadiusY="5"
                                    Rect="0,0,50,50" />
                            </Image.Clip>
                            <Image.Effect>
                                <BlurEffect Radius="2" />
                            </Image.Effect>
                        </Image>

                        <!--  Shadow & Hidden icon  -->
                        <Border
                            Background="Gray"
                            Opacity="0.6"
                            Visibility="{Binding HiddenCoverVisibility}">
                            <Border.Clip>
                                <RectangleGeometry
                                    RadiusX="5"
                                    RadiusY="5"
                                    Rect="0,0,50,50" />
                            </Border.Clip>
                        </Border>
                        <Image
                            Width="25"
                            Height="25"
                            Source="{Binding HiddenCoverSource}"
                            Visibility="{Binding HiddenCoverVisibility}">
                            <Image.Clip>
                                <RectangleGeometry
                                    RadiusX="5"
                                    RadiusY="5"
                                    Rect="0,0,50,50" />
                            </Image.Clip>
                        </Image>
                    </Grid>

                </Button>


                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel
                        Grid.Row="0"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">
                        <TextBlock FontSize="16" Text="{Binding MusicName}" />
                        <TextBlock FontSize="16" Text="{Binding MusicConnection}" />
                        <TextBlock FontSize="16" Text="{Binding MusicArtist}" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="1"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">
                        <TextBlock Text="{Binding MusicNowTime, Converter={StaticResource TimeSpanConverter}}" />
                        <TextBlock Text=" / " />
                        <TextBlock Text="{Binding MusicMaxTime, Converter={StaticResource TimeSpanConverter}}" />
                    </StackPanel>
                </Grid>
            </StackPanel>

            <!--  Control button  -->
            <StackPanel
                Grid.Column="1"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <Button Command="{Binding ClickPreviousMusicCommand}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}">
                    <md:PackIcon Foreground="White" Kind="SkipPrevious">
                        <md:PackIcon.LayoutTransform>
                            <ScaleTransform ScaleX="2" ScaleY="2" />
                        </md:PackIcon.LayoutTransform>
                    </md:PackIcon>
                </Button>
                <Grid>
                    <Button
                        Margin="20,0,20,0"
                        Command="{Binding PlayCommand}"
                        Style="{StaticResource MaterialDesignFloatingActionButton}"
                        Visibility="{Binding PlayButtonVisibility}">
                        <md:PackIcon Foreground="White" Kind="Play">
                            <md:PackIcon.LayoutTransform>
                                <ScaleTransform ScaleX="2" ScaleY="2" />
                            </md:PackIcon.LayoutTransform>
                        </md:PackIcon>
                    </Button>
                    <Button
                        Margin="20,0,20,0"
                        Command="{Binding StopPlayCommand}"
                        Style="{StaticResource MaterialDesignFloatingActionButton}"
                        Visibility="{Binding PauseButtonVisibility}">
                        <md:PackIcon Foreground="White" Kind="Pause">
                            <md:PackIcon.LayoutTransform>
                                <ScaleTransform ScaleX="2" ScaleY="2" />
                            </md:PackIcon.LayoutTransform>
                        </md:PackIcon>
                    </Button>
                </Grid>

                <Button Command="{Binding ClickNextMusicCommand}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}">
                    <md:PackIcon Foreground="White" Kind="SkipNext">
                        <md:PackIcon.LayoutTransform>
                            <ScaleTransform ScaleX="2" ScaleY="2" />
                        </md:PackIcon.LayoutTransform>
                    </md:PackIcon>
                </Button>
            </StackPanel>

            <!--  RightControl  -->
            <DockPanel Grid.Column="2" VerticalAlignment="Center">
                <!--  VolumeButton  -->
                <Grid DockPanel.Dock="Left">
                    <Button
                        Margin="0,0,4,0"
                        Padding="0,0,0,4"
                        Style="{StaticResource MaterialDesignIconButton}">
                        <md:PackIcon Kind="VolumeHigh" />
                    </Button>
                    <Button
                        Margin="0,0,4,0"
                        Padding="0,0,0,4"
                        Style="{StaticResource MaterialDesignIconButton}"
                        Visibility="Hidden">
                        <md:PackIcon Kind="VolumeOff" />
                    </Button>
                </Grid>

                <Button
                    Margin="0,0,10,0"
                    Cursor="Hand"
                    DockPanel.Dock="Right"
                    Style="{StaticResource MaterialDesignIconButton}">
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="MusicListCard">
                                        <ThicknessAnimation
                                            DecelerationRatio="1"
                                            Storyboard.TargetProperty="Margin"
                                            From="400,0,-400,0"
                                            To="0"
                                            Duration="0:0:.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Button.Triggers>
                    <md:PackIcon Kind="PlaylistMusic" />
                </Button>

                <Button
                    Margin="0,0,10,0"
                    DockPanel.Dock="Right"
                    Style="{StaticResource MaterialDesignIconButton}">
                    <!--<md:PopupBox PlacementMode="TopAndAlignCentres" >
                        <md:PopupBox.ToggleContent>
                            <Grid Height="45" Width="45">
                                <Path Data="{Binding PlayModeIcon}" Fill="{DynamicResource PrimaryHueMidBrush}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </md:PopupBox.ToggleContent>
                        <md:PopupBox.PopupContent>
                            <StackPanel>
                                <Button Cursor="Hand" Command="{Binding ChangePlayModeCommand}" CommandParameter="0">
                                    <StackPanel Orientation="Horizontal">
                                        <Path Margin="0,0,5,0" Data="{StaticResource PlaySingle}" Fill="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                        <TextBlock Margin="5,0,0,0" Text="单曲播放" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                                <Button Cursor="Hand" Command="{Binding ChangePlayModeCommand}" CommandParameter="1">
                                    <StackPanel Orientation="Horizontal">
                                        <Path Margin="0,0,5,0" Data="{StaticResource PlaySingleLoop}" Fill="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                        <TextBlock Margin="5,0,0,0" Text="单曲循环" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                                <Button Cursor="Hand" Command="{Binding ChangePlayModeCommand}" CommandParameter="2">
                                    <StackPanel Orientation="Horizontal">
                                        <Path Margin="0,0,5,0" Data="{StaticResource PlayLoop}" Fill="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                        <TextBlock Margin="5,0,0,0" Text="列表循环" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                                <Button Cursor="Hand" Command="{Binding ChangePlayModeCommand}" CommandParameter="3">
                                    <StackPanel Orientation="Horizontal">
                                        <Path Margin="0,0,5,0" Data="{StaticResource PlayRandom}" Fill="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                        <TextBlock Margin="5,0,0,0" Text="随机播放" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </md:PopupBox.PopupContent>

                    </md:PopupBox>-->
                </Button>



                <!--<control:DragSlider
                    Margin="0,0,20,0"
                    VerticalAlignment="Center"
                    Cursor="Hand"
                    IsMoveToPointEnabled="True"
                    Maximum="1"
                    Style="{StaticResource MaterialDesignSlider}"
                    Value="{Binding Volume}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding VolumeChangedCommand}" CommandParameter="{Binding Value, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=control:DragSlider}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </control:DragSlider>-->
            </DockPanel>

        </Grid>
    </Grid>
</UserControl>
